{"version":3,"file":"dom-css-mixin.min.js","sources":["../node_modules/prefix-style/index.js","../node_modules/to-no-case/index.js","../node_modules/to-space-case/index.js","../node_modules/to-camel-case/index.js","../node_modules/add-px-to-style/index.js","../node_modules/dom-css/index.js","../node_modules/isarray/index.js","../src/index.js"],"sourcesContent":["var div = null\nvar prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]\n\nmodule.exports = function prefixStyle (prop) {\n  // re-use a dummy div\n  if (!div) {\n    div = document.createElement('div')\n  }\n\n  var style = div.style\n\n  // prop exists without prefix\n  if (prop in style) {\n    return prop\n  }\n\n  // borderRadius -> BorderRadius\n  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)\n\n  // find the vendor-prefixed prop\n  for (var i = prefixes.length; i >= 0; i--) {\n    var name = prefixes[i] + titleCase\n    // e.g. WebkitBorderRadius or webkitBorderRadius\n    if (name in style) {\n      return name\n    }\n  }\n\n  return false\n}\n","\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","/* The following list is defined in React's core */\nvar IS_UNITLESS = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nmodule.exports = function(name, value) {\n  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {\n    return value + 'px';\n  } else {\n    return value;\n  }\n};","var prefix = require('prefix-style')\nvar toCamelCase = require('to-camel-case')\nvar cache = { 'float': 'cssFloat' }\nvar addPxToStyle = require('add-px-to-style')\n\nfunction style (element, property, value) {\n  var camel = cache[property]\n  if (typeof camel === 'undefined') {\n    camel = detect(property)\n  }\n\n  // may be false if CSS prop is unsupported\n  if (camel) {\n    if (value === undefined) {\n      return element.style[camel]\n    }\n\n    element.style[camel] = addPxToStyle(camel, value)\n  }\n}\n\nfunction each (element, properties) {\n  for (var k in properties) {\n    if (properties.hasOwnProperty(k)) {\n      style(element, k, properties[k])\n    }\n  }\n}\n\nfunction detect (cssProp) {\n  var camel = toCamelCase(cssProp)\n  var result = prefix(camel)\n  cache[camel] = cache[cssProp] = cache[result] = result\n  return result\n}\n\nfunction set () {\n  if (arguments.length === 2) {\n    if (typeof arguments[1] === 'string') {\n      arguments[0].style.cssText = arguments[1]\n    } else {\n      each(arguments[0], arguments[1])\n    }\n  } else {\n    style(arguments[0], arguments[1], arguments[2])\n  }\n}\n\nmodule.exports = set\nmodule.exports.set = set\n\nmodule.exports.get = function (element, properties) {\n  if (Array.isArray(properties)) {\n    return properties.reduce(function (obj, prop) {\n      obj[prop] = style(element, prop || '')\n      return obj\n    }, {})\n  } else {\n    return style(element, properties || '')\n  }\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","import css from 'dom-css';\nimport isArray from 'isarray';\n\nfunction exists(id){\n    return id !== void 0 && !!id && !!document.getElementById(id + '');\n}\n\nexport function mixinCSS(proto){\n    Object.assign(proto, {\n        css(prop, value){\n            if(value === void 0){\n                if(typeof prop === 'string' || isArray(prop)){\n                    return css.get(this.element, prop);\n                }\n                css.set(this.element, prop);\n                return this;\n            }\n            css.set(this.element, prop, value);\n            return this;\n        },\n        stylesheet(styles, id){\n            let css = document.createElement('style');\n            css.type = 'text/css';\n\n            if(id !== void 0){\n                css.id = id;\n            }\n\n            if(css.styleSheet){\n                css.styleSheet.cssText = styles;\n            }else{\n                css.appendChild(\n                    document.createTextNode(styles)\n                );\n            }\n\n            const onload = ()=>{\n                if(exists(id)){\n                    return;\n                }\n                document.getElementsByTagName(\"head\")[0].appendChild(css);\n                window.removeEventListener('load', onload);\n            };\n\n            window.addEventListener('load', onload);\n\n            return css;\n        },\n        stylelink(fileName, id){\n            let link = document.createElement(\"link\");\n            if(id !== void 0){\n                link.id = id;\n            }\n            link.type = \"text/css\";\n            link.rel = \"stylesheet\";\n            link.href = fileName;\n\n            const onload = ()=>{\n                if(exists(id)){\n                    return;\n                }\n                document.getElementsByTagName(\"head\")[0].appendChild(link);\n                window.removeEventListener('load', onload);\n            };\n\n            window.addEventListener('load', onload);\n        }\n    });\n\n    return proto;\n}\n"],"names":["div","prefixes","prop","document","createElement","style","titleCase","charAt","toUpperCase","slice","i","length","name","string","hasSpace","test","toLowerCase","hasSeparator","replace","separatorSplitter","m","next","hasCamel","camelSplitter","previous","uppers","split","join","clean","matches","match","trim","space","letter","IS_UNITLESS","animationIterationCount","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","stopOpacity","strokeDashoffset","strokeOpacity","strokeWidth","value","cache","float","element","property","cssProp","camel","result","toCamelCase","prefix","undefined","addPxToStyle","set","arguments","cssText","properties","k","hasOwnProperty","each","Array","isArray","reduce","obj","toString","arr","call","exists","id","getElementById","proto","Object","assign","css","get","this","stylesheet","styles","let","type","styleSheet","appendChild","createTextNode","const","onload","getElementsByTagName","window","removeEventListener","addEventListener","stylelink","fileName","link","rel","href"],"mappings":"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"}